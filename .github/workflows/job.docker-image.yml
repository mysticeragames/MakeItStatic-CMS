name: '[job] Docker image'

on:
  workflow_call:
    secrets:
      DOCKERHUB_USER:
        required: true
      DOCKERHUB_TOKEN:
        required: true
    inputs:
      PUSH:
        type: string
        default: 'true'
      RELEASE:
        type: string
        default: 'false'
      TARGET_IMAGE:
        type: string
        required: true

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      # Remove special characters in tag name
      IMAGE_DEV: "${{ inputs.TARGET_IMAGE }}:dev-$( echo ${{ github.ref_name }} | sed 's|[^a-zA-Z0-9\\.\\-\\_]|-|g' )"
      IMAGE_RELEASE: "${{ inputs.TARGET_IMAGE }}:$( echo ${{ github.event.release.name }} | sed 's|[^a-zA-Z0-9\\.\\-\\_]|-|g' )"
      IMAGE_LATEST: "${{ inputs.TARGET_IMAGE }}:latest"

    steps:

      # Use a hash (commit) and not a short release-version to make sure it has not been tampered with
      # Release versions can easily be removed and re-uploaded. Hashes not so easily...
      # More info: https://blog.rafaelgss.dev/why-you-should-pin-actions-by-commit-hash
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # https://github.com/actions/checkout/releases/tag/v4.2.2


    - name: Login to Docker Hub
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # https://github.com/docker/login-action/releases/tag/v3.3.0
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # https://github.com/docker/setup-buildx-action/releases/tag/v3.8.0


    - name: Build test image
      uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # https://github.com/docker/build-push-action/releases/tag/v6.12.0
      with:
        load: true
        target: final_test
        tags: |
          ${{ env.IMAGE_DEV }}-test
          ${{ env.IMAGE_RELEASE }}-test
          ${{ env.IMAGE_LATEST }}-test
        cache-from: type=registry,ref=${{ inputs.TARGET_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ inputs.TARGET_IMAGE }}:buildcache,mode=max


    - name: Run tests
      run: docker run --rm ${{ env.IMAGE_DEV }}-test composer test


    - if: ${{ inputs.PUSH == 'true' || inputs.RELEASE == 'true' }}
      name: Build production image
      uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # https://github.com/docker/build-push-action/releases/tag/v6.12.0
      with:
        load: true
        target: final_prod
        tags: |
          ${{ env.IMAGE_DEV }}
          ${{ env.IMAGE_RELEASE }}
          ${{ env.IMAGE_LATEST }}
        cache-from: type=registry,ref=${{ inputs.TARGET_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ inputs.TARGET_IMAGE }}:buildcache,mode=max


    - if: ${{ inputs.PUSH == 'true' }}
      name: Push Docker image
      uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # https://github.com/docker/build-push-action/releases/tag/v6.12.0
      with:
        push: true
        tags: ${{ env.IMAGE_DEV }}
        cache-from: type=registry,ref=${{ inputs.TARGET_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ inputs.TARGET_IMAGE }}:buildcache,mode=max
  

    - if: ${{ inputs.RELEASE == 'true' }}
      name: Release Docker image
      uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # https://github.com/docker/build-push-action/releases/tag/v6.12.0
      with:
        push: true
        tags: |
          ${{ env.IMAGE_RELEASE }}
          ${{ env.IMAGE_LATEST }}
        cache-from: type=registry,ref=${{ inputs.TARGET_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ inputs.TARGET_IMAGE }}:buildcache,mode=max
